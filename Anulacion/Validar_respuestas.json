{
	"info": {
		"_postman_id": "f10a799d-99fe-4728-921f-21ffa73fb84d",
		"name": "Validar respuestas",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29460625",
		"_collection_link": "https://red-satellite-829132.postman.co/workspace/PAGO-PRESENTE-AUTENTICACION~3f42c9d4-328d-4e07-9bfb-42673fee6924/collection/29460625-f10a799d-99fe-4728-921f-21ffa73fb84d?action=share&source=collection_link&creator=29460625"
	},
	"item": [
		{
			"name": "Transfer Management",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Asegúrate de que la respuesta está en el formato JSON\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"// Extrae los valores del primer objeto en \"transfersInfo\"\r",
							"let transferId = responseData.transfersInfo[0].transferId;\r",
							"let txRef = responseData.transfersInfo[0].txRef;\r",
							"\r",
							"// Guarda los valores en variables de entorno o de colección\r",
							"pm.environment.set(\"transferId\", transferId);\r",
							"pm.environment.set(\"txRef\", txRef);\r",
							"\r",
							"// Guarda la respuesta JSON en una variable\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Verifica que los campos en \"meta\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que los campos en 'meta' estén presentes\", function () {\r",
							"    pm.expect(jsonData.meta).to.have.property(\"messageUid\");\r",
							"    pm.expect(jsonData.meta).to.have.property(\"requestDt\");\r",
							"    pm.expect(jsonData.meta).to.have.property(\"requestAppId\");\r",
							"});\r",
							"\r",
							"// Verifica que los campos \"statusCode\" y \"statusDesc\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que 'statusCode' y 'statusDesc' estén presentes\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"statusCode\");\r",
							"    pm.expect(jsonData).to.have.property(\"statusDesc\");\r",
							"});\r",
							"\r",
							"// Verifica que \"transfersInfo\" esté presente y sea un array\r",
							"pm.test(\"Verificar que 'transfersInfo' esté presente y sea un array\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"transfersInfo\");\r",
							"    pm.expect(jsonData.transfersInfo).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"// Verifica que cada objeto en el array \"transfersInfo\" tenga los campos requeridos\r",
							"pm.test(\"Verificar que cada objeto en 'transfersInfo' tenga los campos requeridos\", function () {\r",
							"    jsonData.transfersInfo.forEach(function (transfer) {\r",
							"        pm.expect(transfer).to.have.property(\"transferId\");\r",
							"        pm.expect(transfer).to.have.property(\"source\");\r",
							"        pm.expect(transfer).to.have.property(\"target\");\r",
							"        pm.expect(transfer).to.have.property(\"txRef\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "message-uid",
						"value": "fsdfdsfsd"
					},
					{
						"key": "api-key",
						"value": "f494c2f3-2e29-4766-b706-ec9313470472"
					},
					{
						"key": "Content-Type",
						"value": "application/xml",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"package\": {\r\n    \"type\": \"COLLECTION\",\r\n    \"createDate\": \"\",\r\n    \"packageId\": \"\",\r\n    \"sourceId\":\"fdfdsfdsfdsfsd\"\r\n  },\r\n  \"transfers\": [\r\n    {\r\n      \"transferId\": \"{{$randomPassword}}\",\r\n      \"source\": \"$573124080330\",\r\n      \"target\": \"wcc7vHUcnYpJcba8eiqEmmARtR3cS1PGfV\",\r\n      \"amount\":21,\r\n      \"description\": \"Probando\",\r\n      \"targetBank\": \"COLOMBIA\",\r\n      \"merchantId\": \"AG1525AXCS2AG\",\r\n      \"sourceChannel\": \"POS\",\r\n      \"sourceId\": \"d0508e8b-3065-467f-990c-dc1b2aea8944\",\r\n      \"createDate\": \"2023-01-03T23:47:26.186Z\"\r\n    }\r\n      ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/packages",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"packages"
					]
				}
			},
			"response": [
				{
					"name": "Respuesta de las cuentas de empresas encontradas",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Client-Id",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "accept",
								"value": "aute amet in qui enim",
								"description": "Representa el formato de mensajería que se espera en la respuesta. Ejemplo: application/json"
							},
							{
								"key": "message-uid",
								"value": "aute amet in qui enim",
								"description": "(Required) Identificador del mensaje se usa para trazabilidad. Este identificador permite identificar los logs de los llamados a las APIs en los repositorios de logs, recomienda enviar un UUID para este valor. Ejemplo: c4e6bd04-5149-11e7-b114-12654765af2f."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documentNumber\": \"aute consectetur\",\n  \"accountNumber\": \"magna ipsum incididunt nisi\",\n  \"accountCode\": \"AHO\",\n  \"bankInfo\": {\n    \"bankId\": \"nostrud do sit est\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Accounts/Account/Retrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Accounts",
								"Account",
								"Retrieve"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"meta\": {\n    \"messageUid\": \"c4e6bd04-5149-11e7-b114-a2f933d5fe66\",\n    \"requestDt\": \"2017-01-24 05:00:00.000Z\",\n    \"requestAppId\": \"acxff62e-6f12-42de-9012-1e7304418abd\"\n  },\n  \"data\": {\n    \"accountId\": \"in\",\n    \"accountCode\": \"AHO\",\n    \"accountNumber\": \"amet ea minim\",\n    \"accountName\": \"Cuenta principal mis pagos\",\n    \"accountStatus\": \"Activa\",\n    \"bankInfo\": {\n      \"bankId\": \"elit\",\n      \"bankCode\": \"AFIUCOBB\",\n      \"bankName\": \"Banco Amarillo S.A.S\"\n    },\n    \"balance\": {\n      \"availableBalance\": 2000000\n    },\n    \"register\": {\n      \"registrationDt\": \"25/05/2012\",\n      \"expirationDt\": \"25/05/2022\"\n    }\n  }\n}"
				},
				{
					"name": "La solicitud contiene parámetros inválidos o faltan parámetros requeridos",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Client-Id",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "accept",
								"value": "aute amet in qui enim",
								"description": "Representa el formato de mensajería que se espera en la respuesta. Ejemplo: application/json"
							},
							{
								"key": "message-uid",
								"value": "aute amet in qui enim",
								"description": "(Required) Identificador del mensaje se usa para trazabilidad. Este identificador permite identificar los logs de los llamados a las APIs en los repositorios de logs, recomienda enviar un UUID para este valor. Ejemplo: c4e6bd04-5149-11e7-b114-12654765af2f."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documentNumber\": \"aute consectetur\",\n  \"accountNumber\": \"magna ipsum incididunt nisi\",\n  \"accountCode\": \"AHO\",\n  \"bankInfo\": {\n    \"bankId\": \"nostrud do sit est\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Accounts/Account/Retrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Accounts",
								"Account",
								"Retrieve"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"meta\": {\n    \"messageUid\": \"c4e6bd04-5149-11e7-b114-a2f933d5fe66\",\n    \"requestDt\": \"2017-01-24 05:00:00.000Z\",\n    \"requestAppId\": \"acxff62e-6f12-42de-9012-1e7304418abd\"\n  },\n  \"errors\": [\n    {\n      \"code\": \"000\",\n      \"detail\": \"Transacción Exitosa.\"\n    }\n  ],\n  \"statusCode\": 200,\n  \"statusDesc\": \"OK\"\n}"
				},
				{
					"name": "Autorización fallida",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Client-Id",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "accept",
								"value": "aute amet in qui enim",
								"description": "Representa el formato de mensajería que se espera en la respuesta. Ejemplo: application/json"
							},
							{
								"key": "message-uid",
								"value": "aute amet in qui enim",
								"description": "(Required) Identificador del mensaje se usa para trazabilidad. Este identificador permite identificar los logs de los llamados a las APIs en los repositorios de logs, recomienda enviar un UUID para este valor. Ejemplo: c4e6bd04-5149-11e7-b114-12654765af2f."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documentNumber\": \"aute consectetur\",\n  \"accountNumber\": \"magna ipsum incididunt nisi\",\n  \"accountCode\": \"AHO\",\n  \"bankInfo\": {\n    \"bankId\": \"nostrud do sit est\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Accounts/Account/Retrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Accounts",
								"Account",
								"Retrieve"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"meta\": {\n    \"messageUid\": \"c4e6bd04-5149-11e7-b114-a2f933d5fe66\",\n    \"requestDt\": \"2017-01-24 05:00:00.000Z\",\n    \"requestAppId\": \"acxff62e-6f12-42de-9012-1e7304418abd\"\n  },\n  \"errors\": [\n    {\n      \"code\": \"000\",\n      \"detail\": \"Transacción Exitosa.\"\n    }\n  ],\n  \"statusCode\": 200,\n  \"statusDesc\": \"OK\"\n}"
				},
				{
					"name": "El recurso solicitado no fue encontrado por el sistema",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Client-Id",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "accept",
								"value": "aute amet in qui enim",
								"description": "Representa el formato de mensajería que se espera en la respuesta. Ejemplo: application/json"
							},
							{
								"key": "message-uid",
								"value": "aute amet in qui enim",
								"description": "(Required) Identificador del mensaje se usa para trazabilidad. Este identificador permite identificar los logs de los llamados a las APIs en los repositorios de logs, recomienda enviar un UUID para este valor. Ejemplo: c4e6bd04-5149-11e7-b114-12654765af2f."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documentNumber\": \"aute consectetur\",\n  \"accountNumber\": \"magna ipsum incididunt nisi\",\n  \"accountCode\": \"AHO\",\n  \"bankInfo\": {\n    \"bankId\": \"nostrud do sit est\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Accounts/Account/Retrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Accounts",
								"Account",
								"Retrieve"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"meta\": {\n    \"messageUid\": \"c4e6bd04-5149-11e7-b114-a2f933d5fe66\",\n    \"requestDt\": \"2017-01-24 05:00:00.000Z\",\n    \"requestAppId\": \"acxff62e-6f12-42de-9012-1e7304418abd\"\n  },\n  \"errors\": [\n    {\n      \"code\": \"000\",\n      \"detail\": \"Transacción Exitosa.\"\n    }\n  ],\n  \"statusCode\": 200,\n  \"statusDesc\": \"OK\"\n}"
				},
				{
					"name": "Error interno del servidor.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Client-Id",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "accept",
								"value": "aute amet in qui enim",
								"description": "Representa el formato de mensajería que se espera en la respuesta. Ejemplo: application/json"
							},
							{
								"key": "message-uid",
								"value": "aute amet in qui enim",
								"description": "(Required) Identificador del mensaje se usa para trazabilidad. Este identificador permite identificar los logs de los llamados a las APIs en los repositorios de logs, recomienda enviar un UUID para este valor. Ejemplo: c4e6bd04-5149-11e7-b114-12654765af2f."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documentNumber\": \"aute consectetur\",\n  \"accountNumber\": \"magna ipsum incididunt nisi\",\n  \"accountCode\": \"AHO\",\n  \"bankInfo\": {\n    \"bankId\": \"nostrud do sit est\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Accounts/Account/Retrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Accounts",
								"Account",
								"Retrieve"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"meta\": {\n    \"messageUid\": \"c4e6bd04-5149-11e7-b114-a2f933d5fe66\",\n    \"requestDt\": \"2017-01-24 05:00:00.000Z\",\n    \"requestAppId\": \"acxff62e-6f12-42de-9012-1e7304418abd\"\n  },\n  \"errors\": [\n    {\n      \"code\": \"000\",\n      \"detail\": \"Transacción Exitosa.\"\n    }\n  ],\n  \"statusCode\": 200,\n  \"statusDesc\": \"OK\"\n}"
				},
				{
					"name": "El servicio no está disponible temporalmente. Intente de nuevo más tarde.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Client-Id",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "accept",
								"value": "aute amet in qui enim",
								"description": "Representa el formato de mensajería que se espera en la respuesta. Ejemplo: application/json"
							},
							{
								"key": "message-uid",
								"value": "aute amet in qui enim",
								"description": "(Required) Identificador del mensaje se usa para trazabilidad. Este identificador permite identificar los logs de los llamados a las APIs en los repositorios de logs, recomienda enviar un UUID para este valor. Ejemplo: c4e6bd04-5149-11e7-b114-12654765af2f."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documentNumber\": \"aute consectetur\",\n  \"accountNumber\": \"magna ipsum incididunt nisi\",\n  \"accountCode\": \"AHO\",\n  \"bankInfo\": {\n    \"bankId\": \"nostrud do sit est\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Accounts/Account/Retrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Accounts",
								"Account",
								"Retrieve"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"meta\": {\n    \"messageUid\": \"c4e6bd04-5149-11e7-b114-a2f933d5fe66\",\n    \"requestDt\": \"2017-01-24 05:00:00.000Z\",\n    \"requestAppId\": \"acxff62e-6f12-42de-9012-1e7304418abd\"\n  },\n  \"errors\": [\n    {\n      \"code\": \"000\",\n      \"detail\": \"Transacción Exitosa.\"\n    }\n  ],\n  \"statusCode\": 200,\n  \"statusDesc\": \"OK\"\n}"
				}
			]
		},
		{
			"name": "Anulacion validar respuesta 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Guarda la respuesta JSON en una variable\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Verifica que los campos en \"meta\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que los campos en 'meta' estén presentes\", function () {\r",
							"    pm.expect(jsonData.meta).to.have.property(\"messageUid\");\r",
							"    pm.expect(jsonData.meta).to.have.property(\"requestDt\");\r",
							"    pm.expect(jsonData.meta).to.have.property(\"requestAppId\");\r",
							"});\r",
							"\r",
							"// Verifica que los campos \"statusCode\" y \"statusDesc\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que 'statusCode' y 'statusDesc' estén presentes\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"statusCode\");\r",
							"    pm.expect(jsonData).to.have.property(\"statusDesc\");\r",
							"});\r",
							"\r",
							"// Verifica que los campos en \"data\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que los campos en 'data' estén presentes\", function () {\r",
							"    pm.expect(jsonData.data).to.have.property(\"transferId\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"txRef\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"status\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"source\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"target\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"amount\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"description\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"targetBank\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"merchantId\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"sourceChannel\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"sourceId\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"createDate\");\r",
							"    pm.expect(jsonData.data).to.have.property(\"updateDate\");\r",
							"});\r",
							"\r",
							"// Opcionalmente, puedes agregar validaciones adicionales para los valores específicos\r",
							"pm.test(\"Verificar los valores específicos de los campos\", function () {\r",
							"    pm.expect(jsonData.meta.messageUid).to.be.a(\"string\");\r",
							"    pm.expect(new Date(jsonData.meta.requestDt)).to.be.a(\"date\");\r",
							"    pm.expect(jsonData.meta.requestAppId).to.be.a(\"string\");\r",
							"\r",
							"    pm.expect(jsonData.statusCode).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.statusDesc).to.be.a(\"string\");\r",
							"\r",
							"    pm.expect(jsonData.data.transferId).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.txRef).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.status).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.source).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.target).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.amount).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.description).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.targetBank).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.merchantId).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.sourceChannel).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.data.sourceId).to.be.a(\"string\");\r",
							"    pm.expect(new Date(jsonData.data.createDate)).to.be.a(\"date\");\r",
							"    pm.expect(new Date(jsonData.data.updateDate)).to.be.a(\"date\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "message-uid",
						"value": "fsdfdsfsd"
					},
					{
						"key": "api-key",
						"value": "f494c2f3-2e29-4766-b706-ec9313470472"
					}
				],
				"url": {
					"raw": "{{base-url}}/transfer/{{transferId}}/reject",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"transfer",
						"{{transferId}}",
						"reject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Anulacion validar respuesta 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// Guarda la respuesta JSON en una variable\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Verifica que los campos en \"meta\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que los campos en 'meta' estén presentes\", function () {\r",
							"    pm.expect(jsonData.meta).to.have.property(\"messageUid\");\r",
							"    pm.expect(jsonData.meta).to.have.property(\"requestDt\");\r",
							"    pm.expect(jsonData.meta).to.have.property(\"requestAppId\");\r",
							"});\r",
							"\r",
							"// Verifica que los campos \"statusCode\" y \"statusDesc\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que 'statusCode' y 'statusDesc' estén presentes\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"statusCode\");\r",
							"    pm.expect(jsonData).to.have.property(\"statusDesc\");\r",
							"});\r",
							"\r",
							"// Verifica que \"errors\" esté presente y sea un array\r",
							"pm.test(\"Verificar que 'errors' esté presente y sea un array\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"errors\");\r",
							"    pm.expect(jsonData.errors).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"// Verifica que cada objeto en el array \"errors\" tenga los campos requeridos\r",
							"pm.test(\"Verificar que cada objeto en 'errors' tenga los campos requeridos\", function () {\r",
							"    jsonData.errors.forEach(function (error) {\r",
							"        pm.expect(error).to.have.property(\"code\");\r",
							"        pm.expect(error).to.have.property(\"transferId\");\r",
							"        pm.expect(error).to.have.property(\"detail\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "message-uid",
						"value": "probando"
					},
					{
						"key": "api-key",
						"value": "f494c2f3-2e29-4766-b706-ec9313470472"
					}
				],
				"url": {
					"raw": "{{base-url}}/transfer/XqCCzHWlj5QFlfx/reject",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"transfer",
						"XqCCzHWlj5QFlfx",
						"reject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Anulacion validar respuesta 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_toke32}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "message-uid",
						"value": "fsdfdsfsd"
					},
					{
						"key": "api-key",
						"value": "f494c2f3-2e29-4766-b706-ec9313470472"
					}
				],
				"url": {
					"raw": "{{base-url}}/transfer/{{transferId}}/reject",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"transfer",
						"{{transferId}}",
						"reject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Anulacion validar respuesta 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"// Guarda la respuesta JSON en una variable\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Verifica que los campos en \"meta\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que los campos en 'meta' estén presentes\", function () {\r",
							"    pm.expect(jsonData.meta).to.have.property(\"messageUid\");\r",
							"    pm.expect(jsonData.meta).to.have.property(\"requestDt\");\r",
							"    pm.expect(jsonData.meta).to.have.property(\"requestAppId\");\r",
							"});\r",
							"\r",
							"// Verifica que los campos \"statusCode\" y \"statusDesc\" estén presentes y sean correctos\r",
							"pm.test(\"Verificar que 'statusCode' y 'statusDesc' estén presentes\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"statusCode\");\r",
							"    pm.expect(jsonData).to.have.property(\"statusDesc\");\r",
							"});\r",
							"\r",
							"// Verifica que \"errors\" esté presente y sea un array\r",
							"pm.test(\"Verificar que 'errors' esté presente y sea un array\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"errors\");\r",
							"    pm.expect(jsonData.errors).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"// Verifica que cada objeto en el array \"errors\" tenga los campos requeridos\r",
							"pm.test(\"Verificar que cada objeto en 'errors' tenga los campos requeridos\", function () {\r",
							"    jsonData.errors.forEach(function (error) {\r",
							"        pm.expect(error).to.have.property(\"code\");\r",
							"        pm.expect(error).to.have.property(\"detail\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "message-uid",
						"value": "fsdfdsfsd"
					},
					{
						"key": "api-key",
						"value": "f494c2f3-2e29-4766-b706-ec9313470472"
					}
				],
				"url": {
					"raw": "{{base-url}}/transfer/{{txRef1}}/reject",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"transfer",
						"{{txRef1}}",
						"reject"
					]
				}
			},
			"response": []
		}
	]
}